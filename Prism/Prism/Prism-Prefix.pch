//
//  Prefix header
//
//  The contents of this file are implicitly included at the beginning of every source file.
//

#import <Availability.h>

#ifndef __IPHONE_3_0
#warning "This project uses features only available in iOS SDK 3.0 and later."
#endif

#define SuppressPerformSelectorLeakWarning(Stuff) \
do { \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Warc-performSelector-leaks\"") \
Stuff; \
_Pragma("clang diagnostic pop") \
} while (0)

#ifdef __OBJC__
    #import <UIKit/UIKit.h>
    #import <Foundation/Foundation.h>
    #import "STKVerticalNavigationController.h"
    #import "STK.h"
    #import "HAUtilityFunctions.h"
#import "UIColor+HACore.h"
#import "UIImage+HACore.h"

//    #define [UIColor HATextColor] [UIColor HATextColor];
    #define STKTextTransparentColor [UIColor colorWithRed:192.0/255.0 green:193.0/255.0 blue:213.0/255.0 alpha:0.4]
    #define STKLightBlueColor [UIColor colorWithRed:26.0 / 255.0 green:114.0 / 255.0 blue:178.0 / 255.0 alpha:1]
    #define STKSelectedColor [UIColor colorWithRed:157.0/255.0 green:176.0/255.0 blue:200.0/255.0 alpha:0.5]
    #define STKUnselectedColor [UIColor colorWithRed:78.0/255.0 green:118.0/255.0 blue:157.0/255.0 alpha:0.4]
    #define STKSelectedTextColor [UIColor colorWithRed:70.0/255.0 green:34.0/255.0 blue:151.0/255.0 alpha:1]

#define STKFont(x) [UIFont fontWithName:@"HelveticaNeue-Light" size:x]
#define STKBoldFont(x) [UIFont fontWithName:@"HelveticaNeue-Bold" size:x]
#define IS_HEIGHT_GTE_568 [[UIScreen mainScreen ] bounds].size.height >= 568.0f

#define STRINGIFY(x) #x
    #define STRINGIFY_TOKEN(x) @STRINGIFY(x)

    #define encodeObject(x) [coder encodeObject:x forKey:STRINGIFY_TOKEN(x)]
    #define decodeObject(x) x = [coder decodeObjectForKey:STRINGIFY_TOKEN(x)]
#define SYSTEM_VERSION_EQUAL_TO(v)                  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedSame)
#define SYSTEM_VERSION_GREATER_THAN(v)              ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedDescending)
#define SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(v)  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN(v)                 ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN_OR_EQUAL_TO(v)     ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedDescending)

#endif
